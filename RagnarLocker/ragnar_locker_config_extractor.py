# This is not a professional config extractor, I'm only practicing
# Sample: 63096f288f49b25d50f4aea52dc1fc00871b3927fa2a81fa0b0d752b261a3059

import pefile
import binascii
import re
import os

def _rol(val, bits, bit_size):
    return (val << bits % bit_size) & (2 ** bit_size - 1) | \
           ((val & (2 ** bit_size - 1)) >> (bit_size - (bits % bit_size)))

def _ror(val, bits, bit_size):
    return ((val & (2 ** bit_size - 1)) >> bits % bit_size) | \
           (val << (bit_size - (bits % bit_size)) & (2 ** bit_size - 1))

__ROL4__ = lambda val, bits: _rol(val, bits, 32)

computer_name = os.environ["COMPUTERNAME"]
computer_name_len = len(computer_name)


v37 = 0
for i in range(0,computer_name_len):
    v37 = (ord(computer_name[i]) ^ 0xAB01FF3C)+v37 - __ROL4__((ord(computer_name[i]) ^ 0xAB01FF3C)+ v37, 13)



pe = pefile.PE("63096f288f49b25d50f4aea52dc1fc00871b3927fa2a81fa0b0d752b261a3059.bin")

for section in pe.sections:
    if "keys" in str(section.Name):
        data = section.get_data()
        buffer = (re.split("(00){8}", str(binascii.hexlify(data))))
        buffer = [x for x in buffer if x != '' and x != '00']
        print\
        (f"""
        ID: {str(hex(v37))[2:]}
        IOC: C:\\Users\\Public\\Documents\\RGNR_{(str(hex(v37))[2:]).upper()}.txt
        Key: {buffer[0]}
        Config: {buffer[1:]}
        """)
